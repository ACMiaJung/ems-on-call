@model acemsoncall.web.Models.EntityModel.EMSMessage

@{
    ViewBag.Title = "Create";

}



<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>EMSMessage</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.MessageFrom, "From", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input name="MessageFrom" class="form-control" readonly value="" />
                @Html.ValidationMessageFor(model => model.MessageFrom, "", new { @class = "text-danger" })

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MessageTo, "To", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("MessageTo", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MessageTo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MessageTitle, "Message Title", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MessageTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MessageTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MessageText, "Message", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <section id="editorForm">
                    @using (Html.BeginForm("Edit", "Admin", null, FormMethod.Post, new { role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="row">
                            <div class="col-md-10">
                                <textarea name="content" class="ckeditor" style="min-height:200px;"></textarea>
                            </div>
                        </div>
                        <div class="row">
                            Image: <input type="file" id="postcontentfile" name="ufile" onchange="insertImageToCK(event, 'content', 'postcontentfile');" accept=".jpg, .jpeg, .png" />
                        </div>
                        <div class="row">&nbsp;</div>
                        <div class="row">
                            <div class="offset-md-2 col-md-10">
                                <input type="submit" value="Send" class="btn btn-primary" />
                                <input type="submit" value="Cancel" class="btn btn-danger" />
                            </div>
                        </div>
                    }
                </section>
                @*@Html.ValidationMessageFor(model => model.MessageText, "", new { @class = "text-danger" })*@
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.MessageTimeSent, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MessageTimeSent, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MessageTimeSent, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Send" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section scripts {
    <script src="~/Scripts/ckeditor/ckeditor.js"></script>
}
